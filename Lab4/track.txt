#######################Part2###########################
Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
Start time: 00:50:13 on Oct 31,2021
vlog part2.v 
-- Compiling module fulladder
-- Compiling module ripple
-- Compiling module sext
-- Compiling module option
-- Compiling module option2
-- Compiling module ALU
-- Compiling module register
-- Compiling module part2

Top level modules:
	sext
	option
	option2
	part2
End time: 00:50:13 on Oct 31,2021, Elapsed time: 0:00:00
Errors: 0, Warnings: 0
Reading pref.tcl

# 2020.1

# vsim -c -do "/cad2/ece241f/public/4/test/run.do" work.part2_tb 
# Start time: 00:50:14 on Oct 31,2021
# //  ModelSim - Intel FPGA Edition 2020.1 Feb 28 2020 Linux 4.19.0-18-amd64
# //
# //  Copyright 1991-2020 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim - Intel FPGA Edition and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading sv_std.std
# Loading work.part2_tb
# Loading work.part2
# Loading work.register
# Loading work.ALU
# Loading work.ripple
# Loading work.fulladder
# do /cad2/ece241f/public/4/test/run.do
# At cycle                    3, reset circuit
# At cycle                    4, starts test cases
# TEST 1: checking case 0
# At cycle                    4, Signal B = 0000, Signal A = 1001, select = 0
# At cycle                    5, Check Result
# Your output = 00001001, expected output = 00001001, PASSED
# TEST 2: checking case 0
# At cycle                    5, Signal B = 1001, Signal A = 1000, select = 0
# At cycle                    6, Check Result
# Your output = 10000001, expected output = 00010001, FAILED
# Golden output is assigned to your output to avoid propagated mistakes
# 
# TEST 3: checking case 1
# At cycle                    6, Signal B = 0001, Signal A = 0011, select = 1
# At cycle                    7, Check Result
# Your output = 00000100, expected output = 00000100, PASSED
# TEST 4: checking case 1
# At cycle                    7, Signal B = 0100, Signal A = 0100, select = 1
# At cycle                    8, Check Result
# Your output = 00001000, expected output = 00001000, PASSED
# TEST 5: checking case 2
# At cycle                    8, Signal B = 1000, Signal A = 0100, select = 2
# At cycle                    9, Check Result
# Your output = zzzzzzzz, expected output = 11111000, FAILED
# Golden output is assigned to your output to avoid propagated mistakes
# 
# TEST 6: checking case 3
# At cycle                    9, Signal B = zzzz, Signal A = 1111, select = 3
# At cycle                   10, Check Result
# Your output = zzzzzzzz, expected output = 00000001, FAILED
# Golden output is assigned to your output to avoid propagated mistakes
# 
# TEST 7: checking case 1
# At cycle                   10, Signal B = zzzz, Signal A = 1111, select = 1
# At cycle                   11, Check Result
# Your output = 0000xxxx, expected output = xxxxxxxx, FAILED
# Golden output is assigned to your output to avoid propagated mistakes
# 
# TEST 8: checking case 3
# At cycle                   11, Signal B = xxxx, Signal A = 0000, select = 3
# At cycle                   12, Check Result
# Your output = zzzzzzzz, expected output = 00000000, FAILED
# Golden output is assigned to your output to avoid propagated mistakes
# 
# ** Note: $finish    : /cad2/ece241f/public/4/test/part2_tb.sv(108)
#    Time: 11500 ps  Iteration: 0  Instance: /part2_tb
# End time: 00:50:14 on Oct 31,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
######################SUMMARY of part2##########################
Number of Errors by compiling the verilog code: 0
Number of Errors by running the simulation: 0
Number of PASSED: 3
Number of FAILED: 5
part2 is done!
